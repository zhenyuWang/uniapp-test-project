<template>
  <view>
    <text class="bg-blue">this is detail title: {{title}}</text>
    <view class="button" @click="back">
      <text class="button-text">back</text>
    </view>
    <button @click="close">close current page</button>
    <button @click="switchTabIndex">switchTabIndex</button>
    <button @click="getPages">getPages</button>
  </view>
</template>

<script>
export default {
  data() {
    return {
      title: 'detail title',
    }
  },
  onLoad() {
    println('Page detail onLoad')
  },
  onShow() {
    println('Page detail onShow')
  },
  onReady() {
    println('Page detail onReady')
  },
  onBackPress(e: OnBackPressOptions): Boolean {
    println('onBackPress in detail')
    println(e.from)
    return false
  },
  onHide() {
    println('Page detail onHide')
  },
  methods: {
    back(e: MouseEvent){
      uni.navigateBack({
        success(e){
          println('---------navigateBack success in detail')
          println(e.errMsg)
        },
        fail(e){
          println('---------navigateBack fail in detail')
          println(e.errMsg)
        },
        complete(e){
          println('---------navigateBack complete in detail')
          println(e.errMsg)
        }
      })
    },
    close() {
      const pages = getCurrentPages()
      println(pages)
      const appPage = pages[pages.length-1].$getAppPage()
      println(appPage)
      appPage!.close(new Map<string, any | null>([["animationType", "none"]]))
    },
    switchTabIndex() {
      uni.switchTab({
        url: '/pages/index/index'
      })
    },
    getPages() {
      const pages = getCurrentPages()
      println(pages)
    }
  },
}
</script>
