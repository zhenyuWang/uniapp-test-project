<template>
	<view>
		<text>1111</text>
		<keep-alive>
			<component :is="aliveComp" />
		</keep-alive>
		<button @click="changeAliveComp">changeAliveComp</button>
		<button @click="goAbout">goAbout</button>
		<button @click="testGetApp">testGetApp</button>
		<button @click="testEventBusId">testEventBusId</button>
	</view>
</template>

<script lang="uts">
import Bar from '@/components/Bar/Bar.vue'

  export default {
    data(){
      return {
        aliveComp: Bar
      }
    },
    onLoad(){
      console.log('wzf---index onLoad');
    },
    onShow(){
      console.log('wzf---index onShow');
    },
    onReady(){
      console.log('wzf---index onReady');
    },
    methods: {
      changeAliveComp(){
        this.aliveComp = this.aliveComp == null ? Bar : null
      },
      goAbout(){
        uni.navigateTo({url: '/pages/about/index?name=wzf'})
      },
      testGetApp(){
        const app = getApp()
        console.log('app in index getApp', app.globalData)
        console.log('app in index getApp', app.$vm)
        console.log('app in index getApp', app.vm)
        console.log('app in index getApp', app.vm!.fn())

        const fn1 = (args : any | null) => {
          console.log('this is fn1', args)
        }
        const fn2 = (args : any | null) => {
          console.log('this is fn2', args)
        }
        const fn11 = (args : any | null) => {
          console.log('this is fn11', args)
        }
      },
      testEventBusId(){
        const fn1 = (args : any | null) => {
          console.log('fn1', args)
        }

        const id1 = uni.$on('test-id', fn1)
        console.log('test-id id1', id1)
        uni.$emit('test-id', '触发 test-id fn1')
        uni.$off('test-id', id1)
        uni.$emit('test-id', '触发 test-id fn1')

        const id2 = uni.$once('test-id', fn1)
        console.log('test-id id2', id2)
        uni.$emit('test-id', '触发 test-id fn1')
        uni.$emit('test-id', '触发 test-id fn1')
      }
    }
  }
</script>
