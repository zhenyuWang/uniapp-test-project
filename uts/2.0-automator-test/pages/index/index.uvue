<template>
	<view class="content">
		<text id="test-text" ref='testRef'>test</text>
		<!-- <view><text id="test-id">this is index page</text></view> -->
		<!-- <Foo class="foo" /> -->
		<!-- <switch class="switch" :checked="true" /> -->
		<Foo class="foo" />
		<button :type='type' @click="test" class='btn'>button</button>
		<KeepAlive>
			<component :is="currentComp" />
		</KeepAlive>
		<!-- <input :value="inputValue" /> -->
		<!-- <progress :show-info="false" /> -->
		<!-- <text style="color:#00ff00;" class="test-text">test text</text> -->
		<input v-model.number="num" />
		<text>num: {{num}}</text>
    <view v-for="item in 30" :key="item">{{item}}</view>
	</view>
</template>

<script>
	import Foo from './Foo.uvue'
	import Bar from './Bar.uvue'
	export default {
		components: {
			Foo,
			Bar
		},
		data() {
			return {
				// title: 'index page',
				type: 'default',
				// inputValue: 'default value',
				num: 0,
				data: null as any | null,
				testData: null as any | null,
				header: {} as UTSJSONObject | null,
				currentComp: 'Foo',
			}
		},
		onLoad() {
			const app = getApp()
			console.log('app.globalData.globalNum in index.page onLoad', app.globalData.globalNum)
			app.globalData.globalNum = 300
      const sys = uni.getSystemInfoSync()
      console.log('sys',sys)
		},
		provide: {
			provideFoo: 'provideFoo'
		},
		onReady() {
			const app = getApp()
			console.log('app.globalData.globalNum in index.page onReady', app.globalData.globalNum)
      const windowInfo = uni.getWindowInfo();
      console.log('windowInfo', windowInfo)
      console.log('windowInfo.screenHeight', windowInfo.screenHeight)
      console.log('windowInfo.windowHeight', windowInfo.windowHeight)
      app.globalData.headHeight = windowInfo.screenHeight - windowInfo.windowHeight;
      // uni.navigateTo({url: '/pages/index/test-web-view-fullpage-screenshot'})
			// const pages = getCurrentPages()
			// console.log('pages', pages)
			// const page$Data = pages[0].$vm.$data
			// page$Data.data = 'new data string'
			// const set = new Set<string>(['a', 'b', 'c'])
			// console.log('set', JSON.parse(JSON.stringify(set)))

			// console.log('index this.msg', this.msg)
			// console.log('index this.bool', this.bool)
			// console.log('index this.num', this.num)
			// console.log('index this.obj', this.obj)
			// console.log('index this.arr', this.arr)
			// console.log('index this.fn', this.fn())
			// // change globalProperties
			// this.msg = 'change msg'
			// this.bool = true
			// this.num = 456
			// this.obj = {
			// 	a: 1,
			// 	b: 2
			// }
			// this.arr = [4, 5, 6]
			// console.log('index this.fn 2', this.fn())
			// this.fn = function(): string {
			// 	return 'new fn'
			// }
		},
		methods: {
			test() {
				this.currentComp = this.currentComp === 'Foo' ? 'Bar' : 'Foo'
				// uni.navigateTo({
				// 	url: '/pages/index/about?name=1&age=10',
				// 	success(){
				// 		const testRef = this.$refs['testRef']
				// 		console.log('testRef', testRef)
				// 		const testText = uni.getElementById('test-text')
				// 		console.log('testText', testText)
				// 	}
				// })
				// uni.navigateTo({
				// 	url: '/pages/index/about'
				// })
				// this.type = 'primary'
				// this.inputValue = 'change value'
			}
		}
	}
</script>

<style>
	.test-text {
		background: #ff0000;
	}
</style>