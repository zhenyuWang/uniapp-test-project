<template>
		<view class="content">
				<view class="border-0">index-index-index2</view>
				<view class="border-0" @click="test">index-index-index {{ title }}</view>
				<view class="border-0">测试节点</view>
				<view class="border-1">测试节点</view>
				<view class="border-2">测试节点</view>
				<view class="border-3">测试节点</view>
				<view class="border-4">测试节点</view>
				<view class="border-5">测试节点</view>
				<view class="border-6">测试节点</view>
				<view class="border-7">测试节点</view>
				<view class="border-8">测试节点</view>
				<view class="border-9">测试节点</view>
				<view class="border-10">测试节点</view>
				<view class="border-11">测试节点</view>
				<view class="border-12">测试节点</view>
				<view class="border-13">测试节点</view>
				<view class="border-14">测试节点</view>
				<view class="border-15">测试节点</view>
				<view class="border-16">测试节点</view>
				<view class="border-17">测试节点</view>
				<view class="border-18">测试节点</view>
				<view class="border-19">测试节点</view>
				<view class="border-20">测试节点</view>
				<view class="border-21">测试节点</view>
				<view class="border-22">测试节点</view>
				<view class="border-23">测试节点</view>
				<view class="border-24">测试节点</view>
				<view class="border-25">测试节点</view>
				<view class="border-26">测试节点</view>
				<view class="border-27">测试节点</view>
				<view class="border-28">测试节点</view>
				<view class="border-29">测试节点</view>
				<view class="border-30">测试节点</view>
				<view class="border-31">测试节点</view>
				<view class="border-32">测试节点</view>
				<view class="border-33">测试节点</view>
				<view class="border-34">测试节点</view>
				<view class="border-35">测试节点</view>
		</view>
</template>
<script>
    export default {
			data(){
				return {
					title: '111'
				}
			},
			onLoad(){
				// callVueMethod(this, 'getStorageInfo', [(res: any | null) => {println(res)}])
				// this.getStorageInfo()
			},
			methods: {
				test(){
					// this.title = '2222'
					console.log('test in index')

					// this?.$viewToTempFilePath({
					//     // id: 'root',
					// 		wholeContent: true,
					//     path: 'test',
					//     success(res) {
					//       console.log(res.tempFilePath);
					//     },
					//     fail(err) {
					//       console.log(err.errMsg);
					//     }
					//   })
					// uni.reLaunch({
					// 	url: '/pages/test/test'
					// })
				// 	// initAutomator()
				// 	let socketTask = uni.connectSocket({
				// 	  url: 'ws://192.168.12.106:8080/ws'
				// 	})
				// 	socketTask.onOpen((_) => {
				// 	  console.warn("已开启自动化测试...")
				// 		this.title = '3333'
				// 	})
				// 	const wsEndpoint = "ws://192.168.31.114:9520"
				},
				getStorageInfo(callback:(res:any | null) => void){
					setTimeout(() => {
							callback('getStorageInfo res')
					},1000)
				}
			}
		}
</script>
<style>
    .border-0 {
        border: 100px dotted red;
    }

    .border-1 {
        border: 100px dotted #66ccff;
    }

    .border-2 {
        border: 100px dotted rgb(255, 0, 0);
    }

    .border-3 {
        border: 100px dotted rgba(255, 0, 0, 0.8);
    }

    .border-4 {
        border: 100px dashed red;
    }

    .border-5 {
        border: 100px dashed #66ccff;
    }

    .border-6 {
        border: 100px dashed rgb(255, 0, 0);
    }

    .border-7 {
        border: 100px dashed rgba(255, 0, 0, 0.8);
    }

    .border-8 {
        border: 100px solid red;
    }

    .border-9 {
        border: 100px solid #66ccff;
    }

    .border-10 {
        border: 100px solid rgb(255, 0, 0);
    }

    .border-11 {
        border: 100px solid rgba(255, 0, 0, 0.8);
    }

    .border-12 {
        border: 85rpx dotted red;
    }

    .border-13 {
        border: 85rpx dotted #66ccff;
    }

    .border-14 {
        border: 85rpx dotted rgb(255, 0, 0);
    }

    .border-15 {
        border: 85rpx dotted rgba(255, 0, 0, 0.8);
    }

    .border-16 {
        border: 85rpx dashed red;
    }

    .border-17 {
        border: 85rpx dashed #66ccff;
    }

    .border-18 {
        border: 85rpx dashed rgb(255, 0, 0);
    }

    .border-19 {
        border: 85rpx dashed rgba(255, 0, 0, 0.8);
    }

    .border-20 {
        border: 85rpx solid red;
    }

    .border-21 {
        border: 85rpx solid #66ccff;
    }

    .border-22 {
        border: 85rpx solid rgb(255, 0, 0);
    }

    .border-23 {
        border: 85rpx solid rgba(255, 0, 0, 0.8);
    }

    .border-24 {
        border: 20% dotted red;
    }

    .border-25 {
        border: 20% dotted #66ccff;
    }

    .border-26 {
        border: 20% dotted rgb(255, 0, 0);
    }

    .border-27 {
        border: 20% dotted rgba(255, 0, 0, 0.8);
    }

    .border-28 {
        border: 20% dashed red;
    }

    .border-29 {
        border: 20% dashed #66ccff;
    }

    .border-30 {
        border: 20% dashed rgb(255, 0, 0);
    }

    .border-31 {
        border: 20% dashed rgba(255, 0, 0, 0.8);
    }

    .border-32 {
        border: 20% solid red;
    }

    .border-33 {
        border: 20% solid #66ccff;
    }

    .border-34 {
        border: 20% solid rgb(255, 0, 0);
    }

    .border-35 {
        border: 20% solid rgba(255, 0, 0, 0.8);
    }
</style>